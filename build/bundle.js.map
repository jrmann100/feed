{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/userdata.ts","../../src/assignments.ts","../../src/Omni.svelte","../../src/Time.svelte","../../src/Settings.svelte","../../src/Task.svelte","../../src/TaskList.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', `display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ` +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = `data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>`;\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.28.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal';\nexport { get_store_value as get } from '../internal';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","/**\n * Manage user data, including profile information and bookmarks.\n * @module userdata\n */\nimport { writable, derived } from 'svelte/store';\n/** A default profile photo from Google. */\nconst default_icon = \"https://lh3.googleusercontent.com/-XdUIqdMkCWA/AAAAAAAAAAI/AAAAAAAAAAA/4252rscbv5M/photo.jpg\";\n/** Link, for use in a Bookmark. */\nexport class Link {\n}\n/** Bookmark, referenced by multiple aliases and providing access to Link destinations. */\nexport class Bookmark {\n}\n/** The Google account's profile name, synced to local storage. */\nexport const profileName = writable(localStorage.getItem(\"profileName\") || \"Signed Out\");\n/** The Google account's profile photo, synced to local storage. */\nexport const profileIcon = writable(localStorage.getItem(\"profileIcon\" || default_icon));\n/** The user's bookmarks, synced to local storage. */\nexport const profileBookmarks = writable(JSON.parse(localStorage.getItem(\"profileBookmarks\") || \"[]\"));\n/** The Canvas calendar link (a .ics file) used to load assignments from that LMS. Synced to local storage. */\nexport const profileCanvasURL = writable(localStorage.getItem(\"profileCanvasURL\") || \"\");\n/** Once signed out of Google, reset profile data to defualt. */\nexport const profileGoogleSignout = () => {\n    profileName.set(\"Signed out\");\n    profileIcon.set(default_icon);\n};\n// Sync all profile data to local storage, preserving it after the page is unloaded.\nprofileName.subscribe(value => localStorage.setItem(\"profileName\", value));\nprofileIcon.subscribe(value => localStorage.setItem(\"profileIcon\", value));\nprofileBookmarks.subscribe(value => localStorage.setItem(\"profileBookmarks\", JSON.stringify(value)));\nprofileCanvasURL.subscribe(value => localStorage.setItem(\"profileCanvasURL\", value));\n/**\n * A derived store of all profile aliases with their corresponding Bookmark's index in `$profileBookmarks`.\n *\n * @example\n * $profileBookmarks = {{aliases: [\"a\", \"b\"]}, {aliases: [\"c\"]}}\n * // $profileAliases is now {a: 0, b: 0, c: 1}\n * $profileBookmarks[$profileAliases[\"a\"]]\n * // Resolves to $profileBookmarks[0]\n*/\nexport const profileAliases = derived(profileBookmarks, $profileBookmarks => \n// Convert a 2D array of aliases[][] to a 1D array of [alias, bookmarkIndex][].\n[].concat(...$profileBookmarks.map((bookmark, bookmarkIndex) => bookmark.aliases.map(alias => [alias, bookmarkIndex])))\n    // Convert [alias, bookmarkIndex] pairs into { alias: bookmarkIndex } properties.\n    .reduce((acc, keyval) => acc = Object.assign(Object.assign({}, acc), { [keyval[0]]: keyval[1] }), {}));\n","/**\n * Manage LMS and other third-party integrations.\n * @module assignments\n */\nimport { profileName, profileIcon, profileGoogleSignout, profileCanvasURL } from \"./userdata\";\nimport { get, writable } from 'svelte/store';\n/**\n * Binary search: locates the index at which a number should be inserted to maintain sorted order.\n * @param A An array of numbers.\n * @param T The number to search for.\n * @returns The index at which the number should be inserted.\n */\nconst search = (A, T) => {\n    let L = 0;\n    let R = A.length - 1;\n    while (L <= R) {\n        let m = Math.floor((L + R) / 2);\n        if (A[m] < T)\n            L = m + 1;\n        else if (A[m] > T)\n            R = m - 1;\n        else\n            return m;\n    }\n    return L;\n};\n/** The main list of Items, rendered into the TaskList as Tasks. */\nexport const taskItems = writable([]);\nexport class Item {\n    /** Constructor: insert new item into the taskItems list such that it remains sorted by date. */\n    constructor(name, className, description, url, date, completed = -1) {\n        /** A status indicating the completion of this assignment: `1` for completed, `0` for incomplete, and `-1` for unknown. */\n        this.completed = -1;\n        this.name = name;\n        this.className = className;\n        this.description = description;\n        this.url = url;\n        this.date = date;\n        this.completed = completed;\n        let insert = search(get(taskItems).map((item) => item.date.getTime()), this.date.getTime());\n        taskItems.set([\n            ...get(taskItems).slice(0, insert),\n            this,\n            ...get(taskItems).slice(insert),\n        ]);\n    }\n}\n;\n/** Google API object, loaded from the Google library. */\nlet gapi;\n/** Setup the Google Classroom API and login/logout callbacks. */\nconst setupGAPI = () => {\n    gapi.client\n        .init({\n        clientId: \"254795124493-hqrmlh9oqs85knd24o98c3644hmiqoc3.apps.googleusercontent.com\",\n        discoveryDocs: [\n            \"https://www.googleapis.com/discovery/v1/apis/classroom/v1/rest\",\n        ],\n        scope: [\n            \"profile\",\n            \"https://www.googleapis.com/auth/classroom.courses.readonly\",\n            \"https://www.googleapis.com/auth/classroom.coursework.me.readonly\",\n        ].join(\" \"),\n    })\n        .then(() => {\n        gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\n        updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n    }, (error) => {\n        console.error(JSON.stringify(error, null, 2));\n    });\n};\n/** Update the user profile on Google sign-in status change. */\nconst updateSigninStatus = (isSignedIn) => {\n    if (isSignedIn) {\n        let profile = gapi.auth2.getAuthInstance().currentUser.get().getBasicProfile();\n        if (profile.getName() != get(profileName)) {\n            profileName.set(profile.getName());\n            profileIcon.set(profile.getImageUrl());\n        }\n        setupClassroom();\n    }\n    else {\n        profileGoogleSignout();\n    }\n};\n/** Sign in or out of Google, depending on the current status. */\nexport const googleChangeSignIn = () => gapi.auth2.getAuthInstance().isSignedIn.get() ? gapi.auth2.getAuthInstance().signOut() : gapi.auth2.getAuthInstance().signIn();\n/** Load assignments from the Google Classroom API. */\nconst setupClassroom = async () => {\n    // Get every course the student has ever enrolled in, then ignore all archived courses.\n    const allCourses = await gapi.client.classroom.courses.list();\n    const currCourses = allCourses.result.courses.filter((course) => course.courseState != \"ARCHIVED\");\n    // Get every assignment from every course.\n    const assignmentGroups = (await Promise.all(currCourses.map(async (course) => {\n        const works = await gapi.client.classroom.courses.courseWork.list({\n            courseId: course.id,\n        });\n        return works.result.courseWork;\n    }))).filter((group) => group != undefined);\n    // Convert 2D assignment groups (all per class) to 1D assignments (all per student).\n    // https://stackoverflow.com/a/39805778/9068081\n    const assignments = [].concat(...assignmentGroups);\n    // Submissions and assignments are handled separately, as would be in the teacher view.\n    // So every assignment is converted into a classroomItem with its corresponding submission.\n    let classroomItems = await Promise.all(assignments.map(async (assignment) => {\n        // Get every submission for every assignment (there is only ever one per student).\n        const submissionsList = await gapi.client.classroom.courses.courseWork.studentSubmissions.list({\n            courseId: assignment.courseId,\n            courseWorkId: assignment.id,\n        });\n        return {\n            assignment: assignment,\n            submission: submissionsList.result.studentSubmissions[0],\n        };\n    }));\n    // Convert every assignment/submission pair into an Item.\n    classroomItems\n        .filter((item) => item.submission.state == \"CREATED\")\n        .forEach((item) => new Item(item.assignment.title, currCourses.find((course) => course.id == item.assignment.courseId).name, item.assignment.description, item.assignment.alternateLink.replace(\"classroom.google.com/\", \"classroom.google.com/u/1/\"), item.assignment.dueDate\n        ? new Date(Date.UTC(item.assignment.dueDate.year, item.assignment.dueDate.month - 1, item.assignment.dueDate.day, item.assignment.dueTime.hours, item.assignment.dueTime.minutes || 0))\n        : new Date(), \n    // Classroom items might not always have a due date.\n    // We're tentatively setting the due date to be right now, but these should really be marked in their own category.\n    item.submission.state != \"CREATED\" ? 1 : 0));\n    console.log(`Loaded ${classroomItems.length} Google Classroom assignments from ${currCourses.length} courses: `, classroomItems.map((item) => item.assignment.title));\n    // This return value shouldn't be needed.\n    return classroomItems;\n};\n/** Load assignments from a Canvas personal calendar. */\nconst setupICAL = async () => {\n    /** ICAL library object, loaded from the library. */\n    const ICAL = window.ICAL;\n    // Fetch the calendar through a proxy that will add CORS to our request.\n    // This isn't necessarily secure, but the calendar is publicly accessible regardless.\n    // Without the proxy and still relying on the Canvas calendar, we'd need to make our own server,\n    // and this app is designed to be able to run independently.\n    const response = await fetch(new Request(\"https://cors-anywhere.herokuapp.com/\" +\n        ((url) => url.hostname + url.pathname).call(undefined, new URL(get(profileCanvasURL))), {\n        mode: \"cors\",\n    }));\n    if (!response.ok) {\n        console.error(`HTTP error fetching calendar! status: ${response.status}`);\n        return;\n    }\n    // Get the text body of the response.\n    const calendarData = await response.text();\n    // Parse the calendar data.\n    let canvasItems = new ICAL.Component(ICAL.parse(calendarData)).getAllSubcomponents(\"vevent\");\n    console.log(`Loaded ${canvasItems.length} Canvas assignments: `, canvasItems.map((item) => (item.getFirstPropertyValue(\"summary\").match(/.+?(?= \\()/) ||\n        item.getFirstPropertyValue(\"summary\").match(/.+?(?= \\[)/))[0]));\n    // Assemble a direct link to any Canvas assignment.\n    // These regexes are broken in Safari, and I'm not sure how to fix them.\n    const assembleCanvasURL = (href) => {\n        const url = new URL(href);\n        return (url.origin +\n            \"/courses/\" +\n            url.searchParams.get(\"include_contexts\").replace(\"course_\", \"\") +\n            \"/assignments/\" +\n            url.hash.replace(\"#assignment_\", \"\"));\n    };\n    // Ignore past assignments.\n    canvasItems\n        .filter((item) => new Date().getTime() <=\n        item.getFirstPropertyValue(\"dtstart\").toJSDate().getTime())\n        // Convert each Canvas calendar event into an Item.\n        .forEach((item) => {\n        new Item((item.getFirstPropertyValue(\"summary\").match(/.+?(?= \\()/) ||\n            item.getFirstPropertyValue(\"summary\").match(/.+?(?= \\[)/))[0], item.getFirstPropertyValue(\"summary\").match(/\\[([^\\]]+)\\]/)[0], item.getFirstPropertyValue(\"description\"), assembleCanvasURL(item.getFirstPropertyValue(\"url\")), item.getFirstPropertyValue(\"dtstart\").toJSDate(), new Date().getTime() >\n            item.getFirstPropertyValue(\"dtstart\").toJSDate().getTime()\n            ? 1\n            : -1\n        // Since Canvas won't tell us if something is done, we'll only show upcoming assignments.\n        // Note that past assignments (currently they don't even make it to this point) are marked as complete,\n        // but current/future is incomplete because the calendar doesn't update to let us know if they're finished.\n        );\n    });\n};\n/** Load an external script. */\nconst loadScript = (src) => {\n    return new Promise((resolve, reject) => {\n        let s = document.createElement(\"script\");\n        s.src = src;\n        s.onload = resolve;\n        s.onerror = reject;\n        document.head.appendChild(s);\n    });\n};\n/** Load APIs and their respective assignments for all LMSes. */\nexport const loadAssignments = () => {\n    taskItems.set([]);\n    loadScript(\"https://unpkg.com/ical.js@1.4.0/build/ical.js\").then(setupICAL);\n    loadScript(\"https://apis.google.com/js/api:client.js\").then(() => {\n        gapi = window.gapi;\n        gapi.load(\"auth2\", setupGAPI);\n    });\n};\n","<script lang=\"ts\">\n  import { profileBookmarks, profileAliases, Link } from \"./userdata\";\n  /** The current value of the omnibox. */\n  let content: string;\n  /** The message to display in the omnibox if there is an input error. */\n  let error = \"\";\n\n  /** The search box. */\n  let input: HTMLInputElement;\n\n  /** Show the error text for three seconds. */\n  export const showError = (text: string) => {\n    if (input) {\n      error = text;\n      setTimeout(() => (error = \"\"), 3000);\n    }\n  };\n\n  /** Upon (external) activation, focus within the omnibox. */\n  export const trigger = (ev: Event) => {\n    if (input) {\n      input.focus();\n    }\n  };\n\n  /** On returning a command (pressing enter). */\n  const keydown = (ev: KeyboardEvent) => {\n    if (ev.key == \"Enter\") {\n      ev.preventDefault();\n      let command = content.toLowerCase().split(\" \");\n      content = \"\";\n      if (!command[0] || !command[1]) {\n        showError(\"Enter a command in the format [link] [alias].\");\n        return;\n      }\n      // First check that the bookmark exists...\n      if (Object.keys($profileAliases).includes(command[1])) {\n        // ...then check that the link exists.\n        let linkIndex = $profileBookmarks[$profileAliases[command[1]]].links\n          .map((link) => link.name)\n          .indexOf(command[0]);\n        if (linkIndex != -1) {\n          window.open(\n            $profileBookmarks[$profileAliases[command[1]]].links[linkIndex].url\n          );\n        } else {\n          showError(`No link ${command[0]} for alias ${command[1]}.`);\n        }\n      } else {\n        showError(`No alias match for ${command[1]}.`);\n      }\n    }\n  };\n</script>\n\n<style>\n  input {\n    margin-top: 1rem;\n    display: block;\n    margin-left: auto;\n    margin-right: auto;\n    padding: 0.5rem;\n    font-size: 1.5rem;\n    height: max-content;\n    border-radius: 0.5rem;\n    width: 30rem;\n    max-width: 90vw;\n    background-color: transparent;\n    border: 0.2rem solid var(--whiter);\n    color: var(--whiter);\n    transition: background-color 0.2s;\n  }\n\n  input:focus {\n    color: var(--darker);\n    background-color: var(--whiter);\n  }\n\n  input::placeholder {\n    color: var(--whiter);\n    opacity: 1;\n  }\n\n  input.error {\n    background-color: var(--whiter);\n  }\n\n  input.error::placeholder {\n    color: salmon;\n  }\n</style>\n\n<input\n  type=\"text\"\n  bind:this={input}\n  class:error={error != ''}\n  bind:value={content}\n  on:keydown={keydown}\n  placeholder={error || 'Enter a command (press \"/\" to focus)'} />\n","<script lang=\"ts\">\n  import { onMount } from \"svelte\";\n\n  // The current time and date, updated every minute.\n  let dateTime = new Date();\n\n  // Parse an updated dateTime into time (HHMM) and date (MMDD) text.\n  $: time =\n    (dateTime.getHours() == 12 ? 12 : dateTime.getHours() % 12)\n      .toString()\n      .padStart(2, \"0\") + dateTime.getMinutes().toString().padStart(2, \"0\");\n  $: progress = dateTime.getMinutes() / 60;\n  $: date =\n    (dateTime.getMonth() + 1).toString().padStart(2, \"0\") +\n    dateTime.getDate().toString().padStart(2, \"0\");\n\n  // Refresh the date every minute. \n  onMount(() => {\n    const interval = setInterval(() => {\n      dateTime = new Date();\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  });\n</script>\n\n<style>\n  .time-module {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    margin-top: 2rem;\n    flex-direction: column;\n    color: var(--whiter);\n  }\n\n  .time-module .time {\n    font-size: 4rem;\n  }\n\n  .time-module .progress {\n    stroke: var(--whiter);\n    width: 20rem;\n    max-width: 90vw;\n    border-radius: 0.2rem;\n  }\n  .time-module .date {\n    font-size: 2.5rem;\n  }\n\n  svg.progress path:first-of-type {\n    stroke: lightskyblue;\n  }\n\n  @media (prefers-color-scheme: dark) {\n    svg.progress path:first-of-type {\n      stroke: darkslategray;\n    }\n  }\n  svg.progress path:last-of-type {\n    stroke-dasharray: 10;\n    stroke-dashoffset: var(--progress-offset);\n    opacity: 0;\n    animation: progress-animation 0.5s 0.5s ease, fadein 0.5s 0.5s forwards;\n    transition: stroke-dashoffset 0.2s;\n  }\n\n  @keyframes progress-animation {\n    from {\n      stroke-dashoffset: 10;\n    }\n    to {\n      stroke-dashoffset: var(--progress-offset);\n    }\n  }\n  @keyframes fadein {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n</style>\n\n<div class=\"time-module\">\n  <div class=\"time\">{time}</div>\n  <svg class=\"progress\" viewBox=\"0 0 10 0.5\">\n    <path d=\"M0,0 H10\" />\n    <path d=\"M0,0 H10\" style=\"--progress-offset:{10 - 10 * progress}\" />\n  </svg>\n  <div class=\"date\">{date}</div>\n</div>\n","<script lang=\"ts\">\n  import {\n    profileBookmarks,\n    profileAliases,\n    profileCanvasURL,\n    profileName\n  } from \"./userdata\";\n  \n  import { googleChangeSignIn, loadAssignments } from \"./assignments\";\n\n\n  /** Whether or not the modal window is shown. */\n  export let visible: boolean = false;\n  /** The window wrapper element. */\n  export let wrapper: HTMLDivElement;\n  /** An element which opens the settings window on click. */\n  export let button: HTMLElement;\n\n  /**\n   * Autofocus an element that uses the use: directive.\n   * Functionally equivalent to the `autofocus` attribute.\n   * @param el The element to focus.\n   */\n\n  // This causes the window to scroll jump to the new bookmark while it's trying to do smooth scrolling, which is jarring.\n  const focus = (el: HTMLElement) => {\n    el.focus();\n  };\n</script>\n\n<style>\n  .wrapper {\n    position: fixed;\n    top: 30%;\n    left: 10%;\n    right: 10%;\n    max-height: 60%;\n    background-color: var(--white);\n    opacity: 0;\n    transition: visibility 0s 0.2s, left 0s 0.2s, top 0s 0.2s,\n      max-height 0s 0.2s, right 0s 0.4s, border-radius 0.2s, opacity 0.2s;\n    border-radius: 2rem;\n    visibility: hidden;\n    box-shadow: var(--module-shadow);\n    padding: 2rem;\n    overflow: scroll;\n    border: 0.2rem solid var(--whiter);\n    z-index: 2;\n  }\n\n  .wrapper.visible {\n    top: 10%;\n    left: 10%;\n    max-height: 80%;\n    right: 10%;\n    border-radius: 2rem;\n    opacity: 1;\n    transition: visibility 0s, left 0.5s, top 0.4s, max-height 0.4s, right 0.4s,\n      border-radius 0.2s, opacity 0.2s;\n    visibility: visible;\n  }\n\n  .bookmark-form,\n  input {\n    display: grid;\n  }\n\n  .bookmark-form {\n    grid-template-columns: 40% 50% 10%;\n    max-width: 60vw;\n    margin: auto;\n  }\n\n  .bookmark-title {\n    max-width: 60vw;\n    margin: auto;\n  }\n\n  .alias-text {\n    grid-column: 1 / 2;\n  }\n\n  .alias-del {\n    grid-column: 2;\n    width: 2rem;\n  }\n\n  .link-del {\n    grid-column: 3;\n    width: 2rem;\n  }\n\n  .alias-add,\n  .link-add {\n    grid-column: 1;\n    margin-bottom: 2rem;\n  }\n\n  .link-name {\n    grid-column: 1;\n  }\n\n  .link-url {\n    grid-column: 2;\n  }\n\n  .bookmark-del {\n    grid-column: 1;\n  }\n\n  h2 {\n    grid-column: 1 / -1;\n  }\n\n  .bookmark-form::before {\n    content: \"Configure your bookmark here.\\A\\A\\A\";\n    white-space: pre;\n  }\n  .bookmark-form:invalid::before {\n    content: \"Please correctly fill out all aliases,\\Aor delete empty rows.\\A\\A\";\n    color: lightcoral;\n  }\n\n  /* It looks like the form needs a submit button for validation to work. */\n  input[type=\"submit\"] {\n    display: none;\n  }\n  input {\n    margin: 0.2rem;\n    padding: 0.5rem;\n    height: max-content;\n    border-radius: 0.5rem;\n    background-color: transparent;\n    border: 0.1rem solid var(--black);\n    color: var(--black);\n    font-size: 0.8rem;\n  }\n\n  input[type=\"button\"] {\n    cursor: pointer;\n    transition: background-color 0.2s, color 0.2s;\n  }\n\n  input[type=\"button\"]:hover {\n    background-color: royalblue;\n    color: var(--whiter);\n  }\n\n  hr {\n    margin-top: 3rem;\n    margin-bottom: 2rem;\n  }\n</style>\n\n<svelte:body\n  on:click={(e) => {\n    setTimeout(() => {\n      // We need to check that body.contains(e.target) in case we've just deleted a settings option.\n      if (visible && !wrapper.contains(e.target) && !button.contains(e.target) && document.body.contains(e.target)) visible = false;\n    }, 100);\n  }} />\n<div class=\"wrapper\" bind:this={wrapper} class:visible>\n  <h1>Accounts</h1>\n  <h2>Canvas Calendar URL</h2>\n  <input type=\"url\" size=\"30\" bind:value={$profileCanvasURL} on:change={loadAssignments} required />\n  <h2>Google OAuth</h2>\n  <input type=\"button\" value=\"{$profileName != \"Signed out\" ? \"Sign out \" + $profileName : \"Sign in with Google\"}\" on:click={()=>{googleChangeSignIn(); loadAssignments();}}>\n  <hr><br><br>\n  <h1>Bookmarks</h1>\n  <input\n    type=\"button\"\n    value=\"Add Bookmark\"\n    on:click={(e) => {\n      $profileBookmarks = [...$profileBookmarks, { aliases: [''], links: [{ name: '', url: '' }] }];\n      setTimeout(() => e.target.parentElement.scrollTo({\n            top: e.target.parentElement.scrollHeight,\n            behavior: 'smooth',\n          }), 50);\n    }} />\n  {#each $profileBookmarks as bookmark, bookmarkIndex}\n    <hr />\n    <h1 class=\"bookmark-title\">{'Bookmark ' + (bookmarkIndex + 1)}</h1>\n    <form class=\"bookmark-form\" action=\"#\">\n      <h2>Aliases</h2>\n      {#each bookmark.aliases as alias, aliasIndex}\n        <input\n          class=\"alias-text\"\n          size=\"8\"\n          placeholder=\"Fill out alias.\"\n          type=\"text\"\n          required\n          use:focus\n          bind:value={alias}\n          on:change={(e) => {\n            e.target.setCustomValidity(Object.keys($profileAliases).includes(e.target.value) ? 'Alias must be unique.' : '');\n            bookmark = bookmark;\n          }} /><input\n          class=\"alias-del\"\n          type=\"button\"\n          value=\"✖\"\n          on:click={(e) => {\n            bookmark.aliases = [...bookmark.aliases.slice(0, aliasIndex), ...bookmark.aliases.slice(aliasIndex + 1)];\n            bookmark = bookmark;\n          }} />\n      {/each}\n      <input\n        class=\"alias-add\"\n        type=\"button\"\n        value=\"Add Alias\"\n        on:click={() => {\n          bookmark.aliases = [...bookmark.aliases, ''];\n        }} />\n      <h2>Links</h2>\n      {#each bookmark.links as link, linkIndex}\n        <input\n          class=\"link-name\"\n          size=\"8\"\n          placeholder=\"Fill out this link name.\"\n          type=\"text\"\n          required\n          bind:value={link.name}\n          on:change={() => {\n            bookmark = bookmark;\n          }} />\n        <input\n          class=\"link-url\"\n          size=\"16\"\n          placeholder=\"Fill out this link URL.\"\n          type=\"url\"\n          required\n          use:focus\n          bind:value={link.url}\n          on:change={() => {\n            bookmark = bookmark;\n          }} /><input\n          class=\"link-del\"\n          type=\"button\"\n          value=\"✖\"\n          on:click={() => {\n            bookmark.links = [...bookmark.links.slice(0, linkIndex), ...bookmark.links.slice(linkIndex + 1)];\n            bookmark = bookmark;\n          }} />\n      {/each}\n      <input\n        class=\"link-add\"\n        type=\"button\"\n        value=\"Add Link\"\n        on:click={() => {\n          bookmark.links = [...bookmark.links, { name: '', url: '' }];\n        }} />\n      <input type=\"submit\" value=\"Validate\" />\n      <input\n        class=\"bookmark-del\"\n        type=\"button\"\n        value=\"Delete Bookmark\"\n        on:click={() => ($profileBookmarks = [...$profileBookmarks.slice(0, bookmarkIndex), ...$profileBookmarks.slice(bookmarkIndex + 1)])} />\n        <!-- Add modules, like Zoom, here? Or auto-detect certain URLs? -->\n      <input type=\"submit\" value=\"Validate\" />\n    </form>\n  {/each}\n</div>\n","<script lang=\"ts\">\n  import type { Item } from \"./assignments\";\n\n  /** The Item to which this Task is bound. */\n  export let item: Item;\n\n  /** Show the time or date the task is due, depending on whether or not that date is today. */\n  let dateString =\n    // The ms in 1 day.\n    item.date.getTime() - new Date().getTime() > 86400000\n      ? item.date.toString().split(\" \")[0]\n      : item.date.toLocaleTimeString([], {\n          hour: \"2-digit\",\n          minute: \"2-digit\",\n          hour12: true,\n        });\n\n  /** Whether or not this task is expanded to show more content. */\n  let expanded: boolean = false;\n</script>\n\n<style>\n  .wrapper {\n    height: max-content;\n    color: var(--black);\n    padding: 0.5rem;\n    border-bottom: var(--black) 0.1rem solid;\n    box-sizing: border-box;\n    font-size: 1.2rem;\n    display: grid;\n    grid-template-columns: 10% 70% 20%;\n    padding: 1rem 0.5rem;\n  }\n\n  .info {\n    grid-column: 2;\n    opacity: 0;\n    visibility: hidden;\n    transition: opacity 0.2s, visibility 0s 0.2s, max-height 0.2s,\n      padding-top 0.2s;\n    max-height: 0;\n    padding-top: 0;\n  }\n\n  .wrapper.expanded .info {\n    max-height: 4rem;\n    padding-top: 0.5rem;\n    opacity: 1;\n    visibility: visible;\n    transition: opacity 0.2s, max-height 0.2s, padding-top 0.2s;\n  }\n\n  .wrapper.expanded a {\n    white-space: normal;\n  }\n\n  .complete {\n    grid-column: 1;\n    width: 1.5rem;\n    height: 1.5rem;\n    border-radius: 100%;\n    box-sizing: border-box;\n    border: 0.1rem solid var(--black);\n    transition: background-color 0.2s;\n    display: inline-block;\n    margin: 0 0.5rem;\n    cursor: pointer;\n    padding: 0.1rem;\n  }\n\n  .complete svg {\n    display: block;\n  }\n\n  .complete svg path {\n    stroke: var(--black);\n    stroke-width: 0.3;\n    stroke-linecap: square;\n  }\n\n  .complete svg path {\n    transition: transform 0.2s, stroke 0.2s;\n    transform-origin: center;\n  }\n\n  .wrapper.expanded .complete svg path:first-of-type {\n    transform: rotate(180deg);\n  }\n  .wrapper.expanded .complete svg path:last-of-type {\n    transform: rotate(90deg);\n  }\n\n  .complete[data-completed=\"1\"] {\n    background-color: var(--black);\n  }\n\n  .complete[data-completed=\"1\"] svg path {\n    stroke: var(--white);\n  }\n\n  .complete[data-completed=\"-1\"] svg path,\n  .complete[data-completed=\"1\"] {\n    stroke: var(--white);\n  }\n\n  .complete[data-completed=\"-1\"] {\n    border-color: lightsalmon;\n    background-color: lightsalmon;\n  }\n\n  a {\n    grid-column: 2;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    white-space: nowrap;\n    width: 100%;\n    text-decoration-color: var(--black);\n    color: var(--black);\n  }\n\n  small {\n    grid-column: 3;\n    text-align: right;\n  }\n</style>\n\n<div class=\"wrapper\" class:expanded>\n  <div\n    class=\"complete\"\n    on:click={() => (expanded = !expanded)}\n    data-completed={item.completed}>\n    <svg viewBox=\"0 0 2 2\"><path d=\"M 0.5,1 H 1.5\" />\n      <path d=\"M 1,0.5 V 1.5\" /></svg>\n  </div>\n  <a href={item.url} target=\"_blank\"> {item.name} </a>\n  <small>{dateString}</small>\n  <div class=\"info\">{item.className}</div>\n</div>\n","<script lang=\"ts\">\n  import { taskItems } from \"./assignments\";\n  import Task from \"./Task.svelte\";\n\n  let wrapper: HTMLDivElement;\n  let animated: boolean = false;\n  let loading: boolean = false;\n\n  // Animate the loading of new task items by masking and expanding the wrapper.\n  // There should be a settings option to enable/disable this.\n  $: if ($taskItems.length > 0 && wrapper) {\n    animated = loading = true;\n    wrapper.style.height =\n      wrapper.querySelector(\".content\").getBoundingClientRect().height + \"px\";\n    setTimeout(() => (loading = false), 800);\n  }\n</script>\n\n<style>\n  .wrapper {\n    width: 30rem;\n    margin: 2rem auto;\n    padding: 1.5rem;\n    border-radius: 1.5rem;\n    max-width: 90vw;\n    background-color: var(--white);\n    transition: height 0.2s 0.5s cubic-bezier(0.18, 0.89, 0.32, 1.28);\n    position: relative;\n    height: 5rem;\n    box-shadow: var(--module-shadow);\n  }\n\n  @media (prefers-color-scheme: dark) {\n    .wrapper {\n      border: 0.2rem solid var(--whiter);\n    }\n  }\n\n  .mask {\n    /* Overflow is hidden when loading, so this is superfluous;\n     * it's mostly for Safari, which is slow to render that change. */\n    border-radius: inherit;\n    position: absolute;\n    background-color: var(--white);\n    overflow: hidden;\n    visibility: hidden;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n  }\n\n  .mask::after {\n    content: \"\";\n    position: absolute;\n    background-color: var(--black);\n    opacity: 0.1;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    top: 100%;\n  }\n\n  .wrapper.animated.loading .mask {\n    animation: startLoad 0.5s forwards;\n  }\n\n  .wrapper.animated.loading .mask::after {\n    animation: constantLoad 1s infinite;\n  }\n\n  .wrapper.animated:not(.loading) .mask {\n    animation: endLoad 0.5s;\n  }\n\n  @keyframes constantLoad {\n    0% {\n      top: 100%;\n      bottom: 0;\n    }\n\n    30% {\n      top: 0;\n      bottom: 0;\n    }\n\n    60%,\n    100% {\n      top: 0;\n      bottom: 100%;\n    }\n  }\n\n  @keyframes startLoad {\n    from {\n      opacity: 1;\n      visibility: visible;\n    }\n\n    to {\n      opacity: 1;\n      visibility: visible;\n    }\n  }\n\n  @keyframes endLoad {\n    0% {\n      opacity: 1;\n      visibility: visible;\n    }\n\n    100% {\n      opacity: 0;\n      visibility: visible;\n    }\n  }\n\n  .wrapper {\n    overflow: scroll;\n    /* Should this scroll, or expand to fit content? */\n  }\n\n  .wrapper.animated.loading {\n    overflow: hidden;\n  }\n\n  .content::before {\n    content: \"tasks\";\n    font-size: 1.5rem;\n    border-bottom: 0.1rem solid var(--black);\n    margin-bottom: 0.5rem;\n    width: max-content;\n    display: block;\n    position: relative;\n  }\n\n  .wrapper.animated.loading .content::before,\n  .wrapper:not(.animated) .content::before {\n    content: \"tasks - loading \" var(--items-length) \"assignments...\";\n  }\n</style>\n\n<div\n  class=\"wrapper\"\n  style=\"--items-length: '{$taskItems.length > 0 ? $taskItems.length + ' ' : ''}'\"\n  class:animated\n  class:loading\n  bind:this={wrapper}>\n  <div class=\"mask\" />\n  <div class=\"content\">\n    {#each $taskItems as item}\n      <Task bind:item />\n    {/each}\n  </div>\n</div>\n","<script lang=\"ts\">\n  import { onMount } from \"svelte\";\n  import { loadAssignments } from \"./assignments.js\";\n  import Omni from \"./Omni.svelte\";\n  import Time from \"./Time.svelte\";\n  import Settings from \"./Settings.svelte\";\n  import TaskList from \"./TaskList.svelte\";\n\n  import { profileName, profileIcon } from \"./userdata.js\";\n\n  let menuVisible: boolean;\n  let menuButton: HTMLDivElement;\n\n  onMount(loadAssignments);\n\n  let activateOmnibox: Function;\n\n  const handleKeydown = (ev: KeyboardEvent) => {\n    if (ev.key == \"/\" && activateOmnibox && !menuVisible) {\n      ev.preventDefault();\n      activateOmnibox();\n    }\n  };\n</script>\n\n<style>\n  .menu-button {\n    position: absolute;\n    width: 3rem;\n    height: 3rem;\n    top: 1.5rem;\n    right: 1.5rem;\n    background-color: var(--white);\n    background-image: var(--profile-icon);\n    background-size: contain;\n    border-radius: 1rem;\n    border: 0.2rem solid var(--whiter);\n    cursor: pointer;\n  }\n</style>\n\n<div\n  class=\"menu-button\"\n  bind:this={menuButton}\n  on:click={() => (menuVisible = !menuVisible)}\n  style=\"--profile-icon:url({$profileIcon})\"\n  alt={$profileName} />\n\n<svelte:body on:keydown={handleKeydown} />\n<Settings bind:visible={menuVisible} bind:button={menuButton} />\n<br />\n<!-- Couldn't figure out how to add padding without stretching a body, so we've got a <br> -->\n<Omni bind:trigger={activateOmnibox} />\n<Time />\n<TaskList />\n<br />\n<!-- There's some background glitch when the TaskList is at the very bottom. Should add a footer anyway. -->\n","import App from './App.svelte';\nconst app = new App({\n    target: document.body,\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","get_store_value","value","_","component_subscribe","component","callback","$$","on_destroy","push","set_store_value","ret","set","action_destroyer","action_result","destroy","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","svg_element","createElementNS","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","toggle_class","toggle","classList","current_component","set_current_component","onMount","Error","get_current_component","on_mount","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","add_flush_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","globals","window","globalThis","global","bind","index","props","undefined","bound","create_component","mount_component","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","prop_values","context","Map","skip_bound","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","indexOf","splice","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","profileName","localStorage","getItem","profileIcon","profileBookmarks","JSON","parse","profileCanvasURL","setItem","stringify","profileAliases","stores","initial_value","single","isArray","stores_array","auto","inited","values","pending","cleanup","sync","result","unsubscribers","derived","$profileBookmarks","concat","bookmark","bookmarkIndex","aliases","alias","reduce","acc","keyval","assign","taskItems","Item","className","description","url","date","completed","A","T","L","R","Math","floor","search","get","item","getTime","slice","gapi","setupGAPI","client","clientId","discoveryDocs","scope","join","auth2","getAuthInstance","isSignedIn","updateSigninStatus","error","console","profile","currentUser","getBasicProfile","getName","getImageUrl","setupClassroom","async","currCourses","classroom","courses","list","course","courseState","assignmentGroups","all","courseWork","courseId","id","group","assignments","classroomItems","assignment","submission","studentSubmissions","courseWorkId","state","title","find","alternateLink","replace","dueDate","Date","UTC","year","month","day","dueTime","hours","minutes","log","setupICAL","ICAL","response","fetch","Request","hostname","pathname","call","URL","mode","ok","status","calendarData","canvasItems","Component","getAllSubcomponents","getFirstPropertyValue","match","toJSDate","href","origin","searchParams","hash","assembleCanvasURL","loadScript","src","reject","onload","onerror","head","loadAssignments","load","content","showError","setTimeout","ev","preventDefault","command","toLowerCase","split","$profileAliases","includes","linkIndex","links","link","open","focus","dateTime","interval","setInterval","clearInterval","time","getHours","toString","padStart","getMinutes","progress","getMonth","getDate","visible","wrapper","button","el","e","contains","body","$profileCanvasURL","signOut","signIn","parentElement","scrollTo","top","scrollHeight","behavior","setCustomValidity","aliasIndex","dateString","toLocaleTimeString","hour","minute","hour12","expanded","r","animated","loading","$taskItems","height","querySelector","getBoundingClientRect","menuVisible","menuButton","activateOmnibox"],"mappings":"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"}